# Optimized Dockerfile for minimal image size (~300-400MB)
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    portaudio19-dev \
    python3-dev \
    wget \
    unzip \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

# Set working directory
WORKDIR /app

# Install uv for faster dependency management
RUN pip install --no-cache-dir uv

# Copy dependency files first (for better caching)
COPY pyproject.toml ./

# Install dependencies based on architecture
RUN if [ "$(dpkg --print-architecture)" = "amd64" ]; then \
        echo "Installing with Vosk support for x86_64"; \
        uv pip install --system -e ".[offline]" --no-cache; \
    else \
        echo "Installing without Vosk for non-x86_64"; \
        uv pip install --system -e . --no-cache; \
    fi

# Copy source code
COPY src/ ./src/

# Download Vosk model only for x86_64
RUN mkdir -p src/mcp_speech_to_text/models && \
    if [ "$(dpkg --print-architecture)" = "amd64" ]; then \
        echo "Downloading Vosk model for x86_64"; \
        cd src/mcp_speech_to_text/models && \
        wget -q https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip && \
        unzip -q vosk-model-small-en-us-0.15.zip && \
        rm vosk-model-small-en-us-0.15.zip && \
        echo "Vosk model installed successfully"; \
    else \
        echo "Skipping Vosk model for non-x86_64 platform"; \
    fi

# Clean up build dependencies to reduce size
RUN apt-get remove -y build-essential python3-dev wget unzip && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create non-root user
RUN groupadd -r speechuser && useradd -r -g speechuser speechuser && \
    chown -R speechuser:speechuser /app
USER speechuser

# Set environment variables
ENV PYTHONPATH=/app/src
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD python -c "print('âœ… Server healthy')" || exit 1

# Expose port
EXPOSE 8000

# Run the server
CMD ["python", "-m", "mcp_speech_to_text"]

# Metadata
LABEL version="1.0.0" \
      description="MCP Speech-to-Text Server - Optimized" \
      maintainer="michaelyuwh" \
      org.opencontainers.image.source="https://github.com/michaelyuwh/mcp-speech-to-text"
